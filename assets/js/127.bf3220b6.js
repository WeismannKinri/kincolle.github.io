(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{751:function(e,n,t){"use strict";t.r(n);var a=t(0),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("In org.springframework.validation package, there has some function for validating data and Validator interface is one of them. Here let's see an example:")]),e._v(" "),t("p",[e._v("Person domain:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("public class Person {\n    private String name;\n    private Integer age;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n}\n")])])]),t("p",[e._v("Define PersonValidator which implements Validator")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('public class PersonValidator implements Validator {\n    @Override\n    public boolean supports(Class<?> clazz) {\n        return Person.class.equals(clazz);\n    }\n    @Override\n    public void validate(Object obj, Errors e) {\n        ValidationUtils.rejectIfEmpty(e, "name", "name.empty");\n        Person p = (Person) obj;\n        if (p.getAge() < 0) {\n            e.rejectValue("age", "negativevalue");\n        } else if (p.getAge() > 110) {\n            e.rejectValue("age", "kincolle");\n        }\n    }\n}\n')])])]),t("p",[e._v("controller")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('@RestController\npublic class FooController {\n    @RequestMapping("/peopleTest")\n    public String people(Person person){\n\n        PersonValidator validator = new PersonValidator();\n        if(validator.supports(Person.class)){\n            BindException errors = new BindException(person, "person");\n            validator.validate(person,errors);\n            List<ObjectError> allErrors = errors.getAllErrors();\n            System.out.println("size="+allErrors.size());\n            for (int i=0;i<allErrors.size();i++) {\n                System.out.println(allErrors.get(i).getCode());\n            }\n\n        }\n        return "success";\n    }\n}\n')])])]),t("p",[e._v("Star Spring boot")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("@SpringBootApplication(exclude={DataSourceAutoConfiguration.class})\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class,args);\n    }\n}\n")])])]),t("p",[e._v("We input  http://localhost:8080/peopleTest?age=200")]),e._v(" "),t("p",[e._v("The output result is:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("size=2\nname.empty\nkincolle\n")])])]),t("p",[e._v("If we do not input age like http://localhost:8080/peopleTest then NullPointException will happen.")])])}),[],!1,null,null,null);n.default=r.exports}}]);