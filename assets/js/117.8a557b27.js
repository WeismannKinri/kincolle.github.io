(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{841:function(e,n,o){"use strict";o.r(n);var t=o(5),i=Object(t.a)({},(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),o("p",[e._v("@Autowired is done according to type of bean. If more than one bean with the same tyep, then BeanCreationException will happen. To solve this problem, we use @Autowired and @Qualifier together.")]),e._v(" "),o("h2",{attrs:{id:"example"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),o("p",[e._v("Interface")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("public interface EmployeeService {\n    public EmployeeDto getEmployeeById(Long id);\n}\n")])])]),o("p",[e._v("We have 2 implementations:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('@Service("service")\npublic class EmployeeServiceImpl implements EmployeeService {\n    public EmployeeDto getEmployeeById(Long id) {\n        return new EmployeeDto();\n    }\n}\n\n@Service("service1")\npublic class EmployeeServiceImpl1 implements EmployeeService {\n    public EmployeeDto getEmployeeById(Long id) {\n        return new EmployeeDto();\n    }\n}\n')])])]),o("p",[e._v("Then invoke it:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('@Controller\n@RequestMapping("/emplayee.do")\npublic class EmployeeInfoControl {\n    \n    @Autowired\n    EmployeeService employeeService;\n     \n    @RequestMapping(params = "method=showEmplayeeInfo")\n    public void showEmplayeeInfo(HttpServletRequest request, HttpServletResponse response, EmployeeDto dto) {\n        ...\n    }\n}\n')])])]),o("p",[e._v("When we star the tomcat, the BeanCreationException will happen:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v("org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'employeeInfoControl': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.kincolle.service.EmployeeService com.kincolle.controller.EmployeeInfoControl.employeeService; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No unique bean of type [com.kincolle.service.EmployeeService] is defined: expected single matching bean but found 2: [service1, service2]\n")])])]),o("p",[e._v("From the exception we know we have 2 implementions, @Autowired won't know which one should be chosen. To solve this problem we can do like the following:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[e._v('@Controller\n@RequestMapping("/emplayee.do")\npublic class EmployeeInfoControl {\n    \n    @Autowired\n    @Qualifier("service")\n    EmployeeService employeeService;\n    \n    @RequestMapping(params = "method=showEmplayeeInfo")\n    public void showEmplayeeInfo(HttpServletRequest request, HttpServletResponse response, EmployeeDto dto) {\n        ...\n    }\n}')])])])])}),[],!1,null,null,null);n.default=i.exports}}]);