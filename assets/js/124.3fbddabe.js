(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{840:function(n,e,t){"use strict";t.r(e);var a=t(5),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[n._v("#")]),n._v(" Introduction")]),n._v(" "),t("p",[n._v("In spring, we always use Setter or Contructor ways to create beans. Here let's see it:")]),n._v(" "),t("h2",{attrs:{id:"setter-di"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setter-di"}},[n._v("#")]),n._v(" Setter DI")]),n._v(" "),t("p",[n._v("The bean class is:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("public class Id {  \n    private int id;  \n    private String name;  \n    public int getId() {  \n        return id;  \n    }  \n    public void setId(int id) {  \n        this.id = id;  \n    }  \n    public String getName() {  \n        return name;  \n    }  \n    public void setName(String name) {  \n        this.name = name;  \n    }  \n}\n")])])]),t("p",[n._v("the Id_Bean.xml file:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>  \n<beans xmlns="http://www.springframework.org/schema/beans"  \n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  \n       xsi:schemaLocation="http://www.springframework.org/schema/beans  \n           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">  \n\n    <bean id="id" class="com.kincolle.Id">  \n    <property name="id" value="1"></property>  \n    <property name="name" value="kincolle"></property>  \n    </bean>  \n</beans> \n')])])]),t("p",[n._v("test it:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('public class IdTest {  \n    public static void main(String[] args){  \n        ClassPathXmlApplicationContext context = new   \n                ClassPathXmlApplicationContext("com/kincolle/Id_Bean.xml");  \n        Id id = (Id)context.getBean("id");  \n        System.out.println(id.getId());  \n        System.out.println(id.getName());  \n    }  \n}  \n')])])]),t("p",[n._v("the Result will be")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("1 kincolle\n")])])]),t("h2",{attrs:{id:"constructor-di"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constructor-di"}},[n._v("#")]),n._v(" Constructor DI")]),n._v(" "),t("p",[n._v("The bean class is:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("public class Id {  \n    private int id;  \n    private String name;  \n\t// use constructor to create bean\n    public Id(int id,String name){  \n        this.id = id;  \n        this.name = name;  \n    }  \n    public int getId() {  \n        return id;  \n    }  \n    public void setId(int id) {  \n        this.id = id;  \n    }  \n    public String getName() {  \n        return name;  \n    }  \n    public void setName(String name) {  \n        this.name = name;  \n    }  \n}  \n")])])]),t("p",[n._v("the Id_Bean.xml file:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>  \n<beans xmlns="http://www.springframework.org/schema/beans"  \n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  \n       xsi:schemaLocation="http://www.springframework.org/schema/beans  \n           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">  \n\n    <bean id="id" class="com.kincolle.Id">  \n    <constructor-arg index="0" value="1"></constructor-arg>  \n    <constructor-arg index="1" value="kincolle"></constructor-arg>  \n    </bean>  \n</beans>  \n')])])]),t("p",[n._v("test it:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("1 kincolle\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);