(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{684:function(t,e,n){"use strict";n.r(e);var r=n(0),l=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),n("p",[t._v("In a try{} there has a return sentense, and after try there has finally{}. So, if the code return sucsessfully, will code in finally{} be operated? If it does, when?")]),t._v(" "),n("p",[t._v("The anwser is code in finally{} will be operated before return unless System.exit(0) is in try{}. The return will be operated firstly but will not return imediately. It will go to do finally{} then do return.")]),t._v(" "),n("h2",{attrs:{id:"example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" example")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('public class Test\n{\n       public static void main(String[] args)\n       {\n              System.out.println(new Test().test());;\n       }\n\n       static int test()\n       {\n              int x = 1;\n              try\n              {\n                     return x;\n              }\n              finally\n              {\n                     System.out.println("finally is running:" + ++x);\n              }\n       }\n} \n')])])]),n("p",[t._v("The result will be :")]),t._v(" "),n("blockquote",[n("p",[t._v("finally is running:2")]),t._v(" "),n("p",[t._v("1")])]),t._v(" "),n("p",[t._v("From the result we know that in finally{} x has been 2. But the result from test() is still 1.")])])}),[],!1,null,null,null);e.default=l.exports}}]);