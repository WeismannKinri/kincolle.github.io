(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{844:function(e,s,t){"use strict";t.r(s);var a=t(5),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),t("bean",{staticClass:"com.kincolle.Role",attrs:{id:"role",scope:"singleton"}}),e._v("\nHere the scope is used for setting the scope of spring bean. Before spring 2.0 there are 2 kinds of the scope:singleton and prototype. After spring 2.0 session, request and global session has been added. Also you can comtomize your own scope.   \n"),t("h3",{attrs:{id:"_1-singleton"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-singleton"}},[e._v("#")]),e._v(" 1. singleton")]),e._v(" "),t("p",[e._v("It is the default scope and only one shared bean will be in the spring IoC container.")]),e._v(" "),t("p",[e._v("here is an example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<bean id="role" class="com.kincolle.Role" scope="singleton"/> \n')])])]),t("p",[e._v("or")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<bean id="role" class="com.kincolle.Role" singleton="true"/>\n')])])]),t("h3",{attrs:{id:"_2-prototype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-prototype"}},[e._v("#")]),e._v(" 2. prototype")]),e._v(" "),t("p",[e._v("When a kind of bean has been setted as prototype, every request will create a new bean. Which means after the beans have been created, the container will not be reponsible for it life.")]),e._v(" "),t("p",[e._v("here is an example:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<bean id="role" class="com.kincolle.Role" scope="prototype"/>\n')])])]),t("p",[e._v("or")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<beanid="role" class="com.kincolle.Role" singleton="false"/>\n')])])]),t("h4",{attrs:{id:"_3-request"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-request"}},[e._v("#")]),e._v(" 3. request")]),e._v(" "),t("p",[e._v("When a kind of bean has been setted as request, every http request will create a new bean and it is usefull just in the current HTTP request. When you use request, session or global session, you should have a web.xml like the following(version of servlet is over 2.4):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("<web-app>\n   ...\n  <listener>\n<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>\n  </listener>\n   ...\n</web-app>\n")])])]),t("p",[e._v("Then we can set the scope:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<bean id="role" class="com.kincolle.Role" scope="request"/>\n')])])]),t("h3",{attrs:{id:"_4-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-session"}},[e._v("#")]),e._v(" 4. session")]),e._v(" "),t("p",[e._v("When a kind of bean has been setted as session, every http request will create a new bean and  it is usefull just in the current HTTP session.  Here is how to set it:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<bean id="role" class="com.kincolle.Role" scope="session"/>\n')])])]),t("h3",{attrs:{id:"_5-global-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-global-session"}},[e._v("#")]),e._v(" 5. global session")]),e._v(" "),t("p",[e._v("It is near to session but it is based on web app of portletï¼ŽHere is how to set it:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('<bean id="role" class="com.kincolle.Role" scope="global session"/>\n')])])])],1)}),[],!1,null,null,null);s.default=n.exports}}]);